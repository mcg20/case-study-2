
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="Mark Otto, Jacob Thornton, and Bootstrap contributors">
    <meta name="generator" content="Hugo 0.84.0">
    <title><%= config.server_title %></title>

    <link rel="canonical" href="https://getbootstrap.com/docs/5.0/examples/dashboard/">
	<link href="https://getbootstrap.com/docs/5.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
	<meta name="theme-color" content="#7952b3">

    <style>
		.bd-placeholder-img {
			font-size: 1.125rem;
			text-anchor: middle;
			-webkit-user-select: none;
			-moz-user-select: none;
			user-select: none;
		}

		@media (min-width: 768px) {
			.bd-placeholder-img-lg {
				font-size: 3.5rem;
			}
		}
    </style>
	<link href="https://getbootstrap.com/docs/5.0/examples/dashboard/dashboard.css" rel="stylesheet">
</head>
<body>

	<header class="navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow">
		<a class="navbar-brand col-md-3 col-lg-2 me-0 px-3" href="#"><%= config.server_title %></a>
		<button class="navbar-toggler position-absolute d-md-none collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#sidebarMenu" aria-controls="sidebarMenu" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
		<input class="form-control form-control-dark w-100" type="text" placeholder="Search" aria-label="Search">
		<div class="navbar-nav">
			<div class="nav-item text-nowrap">
				<a class="nav-link px-3" href="#">Profile</a>
			</div>
		</div>
	</header>

	<div class="container-fluid">
		<div class="row">
			<nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
				<div class="position-sticky pt-3">
					<h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted">
						<span>Saved reports</span>
						<a class="link-secondary" href="#" aria-label="Add a new report">
							<span data-feather="plus-circle"></span>
						</a>
					</h6>
					<ul class="nav flex-column mb-2">
						<li class="nav-item">
						<a class="nav-link" href="#">
							<span data-feather="file-text"></span>
							Current month
						</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="#">
								<span data-feather="file-text"></span>
								Last quarter
							</a>
						</li>
					</ul>
				</div>
			</nav>

			<main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
				<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
					<h1 class="h2">Dashboard</h1>
					<div class="btn-toolbar mb-2 mb-md-0">
						<div class="btn-group me-2">
							<button type="button" class="btn btn-sm btn-outline-secondary">Share</button>
							<button type="button" class="btn btn-sm btn-outline-secondary">Export</button>
						</div>
						<button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle">
							<span data-feather="calendar"></span>
							This week
						</button>
					</div>
				</div>

				<canvas class="my-4 w-100" id="myChart" width="900" height="380"></canvas>

				<h2>Section title</h2>
				<div class="table-responsive">
					<table class="table table-striped table-sm">
					<thead>
						<tr>
							<th scope="col">#</th>
							<th scope="col">Header</th>
							<th scope="col">Header</th>
							<th scope="col">Header</th>
							<th scope="col">Header</th>
						</tr>
					</thead>
					<tbody>
					</tbody>
					</table>
				</div>
			</main>
		</div>
	</div>

	<script src="https://getbootstrap.com/docs/5.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js" integrity="sha384-uO3SXW5IuS1ZpFPKugNNWqTZRRglnUJK6UAZ/gxOX80nxEkN9NcGZTftn6RzhGWE" crossorigin="anonymous"></script><script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js" integrity="sha384-zNy6FEbO50N+Cg5wap8IKA4M/ZnLJgzc6w2NqACZaK0u0FXfOWRRJOnQtpZun8ha" crossorigin="anonymous"></script><script src="dashboard.js"></script>
    <script>
		$(document).ready(function()
		{
			var table = $('#dTable').DataTable({order: [[1, 'desc']]})
			function updateDataTable()
			{
				$.ajax(
				{
					url: '/latestData',
					method: 'GET',
					success: function(data)
					{
						var currentPage = table.page()
						
						updateChart(data)
						<!-- setInterval(updateChart(data), 10000) -->

						table.clear()
						data.forEach(function(doc)
						{
							var timestamp = new Date(parseInt(doc._id.toString().substring(0, 8), 16) * 1000) // conversion by gpt
							var formattedTimestamp = timestamp.toLocaleString()
							//$('#dTable tbody').append('<tr><td>' + doc._id + '</td><td>' + formattedTimestamp + '</td></tr>')
							table.row.add([doc._id, formattedTimestamp, '<button class="btn btn-danger btn-delete" data-id="' + doc._id + '">Delete</button>'])
						})

						table.draw(false)
                        table.page(currentPage).draw(false)
						//$('#dTable').DataTable() // reinitialize DataTable
					}
				})
			}

			updateDataTable()
			// update table every 5 seconds
			setInterval(updateDataTable, 5000)

			// delete button function
			$('#dTable').on('click', '.btn-delete', function() 
			{
				var id = $(this).data('id');
				$.ajax({
					url: '/delete/' + id,
					method: 'DELETE',
					success: function(response)
					{
						alert(response.message)
						updateDataTable()
					},
					error: function(error) {
						alert('An error occurred: ' + error.responseJSON.message)
					}
				})
			})

			// delete all, button function
			$('#deleteAllBtn').on('click', function()
			{
                if (confirm('Are you sure you want to delete all data?'))
				{
                    $.ajax(
					{
                        url: '/deleteAll',
                        method: 'DELETE',
                        success: function(response)
						{
                            alert(response.message)
                            updateDataTable()
                        },
                        error: function(error) {
                            console.error('Error deleting all data:', error)
                            alert('An error occurred: ' + (error.responseJSON && error.responseJSON.message ? error.responseJSON.message : 'Unknown error'))
                        }
                    })
                }
            })

			// initialize graph data
			var ctx = document.getElementById('doorbellChart').getContext('2d')
			var doorbellChart = new Chart(ctx,
			{
                type: 'line',
                data:
				{
                    labels: [],
                    datasets: [{
                        label: 'Pressed Times',
                        data: [],
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options:
				{
					responsive: true,
                    maintainAspectRatio: false,
                    scales:
					{
                        x:
						{
                            type: 'time',
                            time: {
                                unit: 'hour',
                                tooltipFormat: 'MMM dd, HH:mm', // tooltip
                                displayFormats: {
                                    hour: 'HH:mm' // format for the x-axis label
                                }
                            },
                            title: {
                                display: true,
                                text: 'Time'
                            }
                        },
                        y:
						{
                            title: {
                                display: true,
                                text: 'Pressed Times'
                            },
                            beginAtZero: true
                        }
                    }
                }
            })

            function updateChart(data)
			{
                var labels = [] // array
                var counts = [] // array

                var hourlyCounts = Array(24).fill(null)

				// iterate all data collected to 
                data.forEach(doc =>
				{
                    var timestamp = new Date(parseInt(doc._id.toString().substring(0, 8), 16) * 1000) // time gpt conversion
                    var hour = timestamp.getHours()
                    hourlyCounts[hour] += 1
                })

				// iterate collected pushed data from 1 to 24 to hour
                for (var i = 0; i < 24; i++)
				{
					labels.push(new Date().setHours(i, 0, 0, 0))
					counts.push(hourlyCounts[i])
                }

				// then initialize for display
                doorbellChart.data.labels = labels
                doorbellChart.data.datasets[0].data = counts
                doorbellChart.update()
            }
		})
    </script>
</body>
</html>