<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= config.server_title %></title>

	<link rel="stylesheet" href="https://zuramai.github.io/mazer/demo/assets/compiled/css/app.css">
    <link rel="stylesheet" href="https://zuramai.github.io/mazer/demo/assets/compiled/css/app-dark.css">

	<!-- DataTables -->
	<link href="https://zuramai.github.io/mazer/demo/assets/compiled/css/table-datatable-jquery.css" rel="stylesheet">
	<link href="https://zuramai.github.io/mazer/demo/assets/compiled/css/table-datatable.css" rel="stylesheet">
	<link href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css" rel="stylesheet">

	<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
	<script src="https://zuramai.github.io/mazer/demo/assets/extensions/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="https://zuramai.github.io/mazer/demo/assets/extensions/datatables.net-bs5/js/dataTables.bootstrap5.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
<style>
	.dashboard-header {
		color: #fff;
		padding: 1rem 0;
	}
	.dashboard-header h1 {
		margin: 0;
	}
	.dashboard-container {
		margin-top: 2rem;
	}
	.card {
		margin-bottom: 2rem;
	}
    </style>
</head>
<body>
    <header class="dashboard-header text-center">
		<h1>Dashboard</h1>
    </header>
    <div class="container dashboard-container">
        <div class="row">
            <div class="col-12">
				<div class="card">
                    <div class="card-header">
                        <h3>Press Activity Over 24 Hours</h3>
						<p><small>Updates every 5 seconds</small></p>
                    </div>
                    <div class="card-body">
						<canvas id="doorbellChart" width="auto" height="400"></canvas>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h3>Doorbell Real-Time Data</h3>
                        <button id="deleteAllBtn" class="btn btn-danger">Delete All Data</button>
                    </div>
                    <div class="card-body table table-responsive">
						<p><small>Updates every 5 seconds</small></p>
                        <table id="dTable" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>ID#</th>
                                    <th>Date Pressed</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- matic uwu -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
	<footer class=" text-center py-3 mt-3">
        <div class="container">
            <p class="mb-0">&copy; Copyright 2024 <%= config.server_title %></p>
            <p class="mb-0">Members: <%= config.members %></p>
        </div>
    </footer>
	<script src="https://zuramai.github.io/mazer/demo/assets/static/js/components/dark.js"></script>
    <script src="https://zuramai.github.io/mazer/demo/assets/extensions/apexcharts/apexcharts.min.js"></script>
    <script>
		$(document).ready(function()
		{
			var table = $('#dTable').DataTable({order: [[1, 'desc']]})
			function updateDataTable()
			{
				$.ajax(
				{
					url: '/latestData',
					method: 'GET',
					success: function(data)
					{
						var currentPage = table.page()
						
						updateChart(data)

						table.clear()
						data.forEach(function(doc)
						{
							var timestamp = new Date(parseInt(doc._id.toString().substring(0, 8), 16) * 1000) // conversion by gpt
							var formattedTimestamp = timestamp.toLocaleString()
							//$('#dTable tbody').append('<tr><td>' + doc._id + '</td><td>' + formattedTimestamp + '</td></tr>')
							table.row.add([doc._id, formattedTimestamp, '<button class="btn btn-danger btn-delete" data-id="' + doc._id + '">Delete</button>'])
						})

						table.draw(false)
                        table.page(currentPage).draw(false)
						//$('#dTable').DataTable() // reinitialize DataTable
					}
				})
			}

			updateDataTable()
			// update table every 5 seconds
			setInterval(updateDataTable, 5000)

			// delete button function
			$('#dTable').on('click', '.btn-delete', function() 
			{
				var id = $(this).data('id');
				$.ajax({
					url: '/delete/' + id,
					method: 'DELETE',
					success: function(response)
					{
						alert(response.message)
						updateDataTable()
					},
					error: function(error) {
						alert('An error occurred: ' + error.responseJSON.message)
					}
				})
			})

			// delete all, button function
			$('#deleteAllBtn').on('click', function()
			{
                if (confirm('Are you sure you want to delete all data?'))
				{
                    $.ajax(
					{
                        url: '/deleteAll',
                        method: 'DELETE',
                        success: function(response)
						{
                            alert(response.message)
                            updateDataTable()
                        },
                        error: function(error) {
                            console.error('Error deleting all data:', error)
                            alert('An error occurred: ' + (error.responseJSON && error.responseJSON.message ? error.responseJSON.message : 'Unknown error'))
                        }
                    })
                }
            })

			// initialize graph data
			var ctx = document.getElementById('doorbellChart').getContext('2d')
			var doorbellChart = new Chart(ctx,
			{
                type: 'line',
                data:
				{
                    labels: [],
                    datasets: [{
                        label: 'Pressed Times',
                        data: [],
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options:
				{
					responsive: true,
                    maintainAspectRatio: false,
                    scales:
					{
                        x:
						{
                            type: 'time',
                            time: {
                                unit: 'hour',
                                tooltipFormat: 'MMM dd, HH:mm', // tooltip
                                displayFormats: {
                                    hour: 'HH:mm' // format for the x-axis label
                                }
                            },
                            title: {
                                display: true,
                                text: 'Time'
                            }
                        },
                        y:
						{
                            title: {
                                display: true,
                                text: 'Pressed Times'
                            },
                            beginAtZero: true
                        }
                    }
                }
            })

            function updateChart(data)
			{
                var labels = [] // array
                var counts = [] // array

                var hourlyCounts = Array(24).fill(0)

				// iterate all data collected to 
                data.forEach(doc =>
				{
                    var timestamp = new Date(parseInt(doc._id.toString().substring(0, 8), 16) * 1000) // time gpt conversion
                    var hour = timestamp.getHours()
                    hourlyCounts[hour] += 1
                })

				// iterate collected pushed data from 1 to 24 to hour
                for (var i = 0; i < 24; i++)
				{
					labels.push(new Date().setHours(i, 0, 0, 0))
					counts.push(hourlyCounts[i])
                }

				// then initialize for display
                doorbellChart.data.labels = labels
                doorbellChart.data.datasets[0].data = counts
                doorbellChart.update()
            }
		})
    </script>
</body>
</html>